## DB Configuration ##
spring.datasource.url=jdbc:postgresql://localhost:5432/jwtsecuritydb
spring.datasource.username=postgres
spring.datasource.password=postgres

## JPA / Hibernate Configuration ##
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.generate-ddl=true

## Server Configuration ##
server.servlet.context-path=/api
server.port=8080

## JWT Configuration ##
jwt.jwtsecret=2b44b0b00fd822d8ce753e54dac3dc4e06c2725f7db930f3b9924468b53194dbccdbe23d7baa5ef5fbc414ca4b2e64700bad60c5a7c45eaba56880985582fba4
jwt.jwtExpirationTime=36000000

## User credentials

# to create user with "USER" Role: http://localhost:8080/api/user/register
#{

#"firstName": "Max",

#"lastName": "Taylor",

#"email": "max@gmail.com",

#"password": "maxpasswd",

#"userRole": "user"

#}

# to login a user: http://localhost:8080/api/user/authenticate
#{

#"email": "max@gmail.com",

#"password": "maxpasswd",

#}

## Admnin credentials

# to create user with "ADMIN" Role: http://localhost:8080/api/user/register

# {

# "firstName": "Ruddy",

# "lastName": "Gomez",

# "email": "Ruddy@gmail.com",

# "password": "ruddypasswd",

# "userRole": "admin"

# }

# to login as admin: http://localhost:8080/api/admin/hello


# {
# "email": "ruddy@gmail.com",

# "password": "ruddypasswd"
# }